apiVersion: apps/v1
items:
- metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      dev.okteto.com/auto-create: up
      dev.okteto.com/deployment: '{"metadata":{"name":"kubernetesapisample","namespace":"default","creationTimestamp":null,"annotations":{"dev.okteto.com/auto-create":"up"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kubernetesapisample"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"kubernetesapisample"}},"spec":{"containers":[{"name":"dev","image":"okteto/dotnetcore:3","resources":{},"imagePullPolicy":"Always"}],"terminationGracePeriodSeconds":0}},"strategy":{"type":"Recreate"}},"status":{}}'
      dev.okteto.com/revision: "1"
      dev.okteto.com/version: "1.0"
    creationTimestamp: "2020-07-06T03:23:34Z"
    generation: 2
    labels:
      dev.okteto.com: "true"
    name: kubernetesapisample
    namespace: default
    resourceVersion: "1262639"
    selfLink: /apis/apps/v1/namespaces/default/deployments/kubernetesapisample
    uid: cb6e4c79-0609-4ae7-8643-ac7af153c4c4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kubernetesapisample
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kubernetesapisample
          dev.okteto.com: "true"
          interactive.dev.okteto.com: kubernetesapisample
      spec:
        affinity:
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  interactive.dev.okteto.com: kubernetesapisample
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - -r
          - -s
          - authorized_keys:/var/okteto/remote/authorized_keys
          command:
          - /var/okteto/bin/start.sh
          env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Development
          - name: OKTETO_MARKER_PATH
            value: /src/okteto.yml
          - name: OKTETO_NAMESPACE
            value: default
          - name: OKTETO_NAME
            value: kubernetesapisample
          image: okteto/dotnetcore:3
          imagePullPolicy: Always
          name: dev
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /src
            name: okteto-kubernetesapisample
            subPath: src
          - mountPath: /var/syncthing
            name: okteto-kubernetesapisample
            subPath: syncthing
          - mountPath: /var/okteto/remote
            name: okteto-kubernetesapisample
            subPath: okteto-remote
          - mountPath: /var/syncthing/secret/
            name: okteto-sync-secret
          - mountPath: /var/okteto/secret/
            name: okteto-dev-secret
          - mountPath: /var/okteto/bin
            name: okteto-bin
          workingDir: /src
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - cp /usr/local/bin/* /okteto/bin
          image: okteto/bin:1.1.20
          imagePullPolicy: IfNotPresent
          name: okteto-bin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /okteto/bin
            name: okteto-bin
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 0
          runAsGroup: 0
          runAsUser: 0
        terminationGracePeriodSeconds: 0
        volumes:
        - name: okteto-sync-secret
          secret:
            defaultMode: 420
            items:
            - key: config.xml
              mode: 292
              path: config.xml
            - key: cert.pem
              mode: 292
              path: cert.pem
            - key: key.pem
              mode: 292
              path: key.pem
            secretName: okteto-kubernetesapisample
        - name: okteto-kubernetesapisample
          persistentVolumeClaim:
            claimName: okteto-kubernetesapisample
        - name: okteto-dev-secret
          secret:
            defaultMode: 420
            items:
            - key: dev-secret-authorized_keys
              mode: 292
              path: authorized_keys
            secretName: okteto-kubernetesapisample
        - emptyDir: {}
          name: okteto-bin
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-07-06T03:23:40Z"
      lastUpdateTime: "2020-07-06T03:23:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-07-06T03:23:34Z"
      lastUpdateTime: "2020-07-06T03:23:40Z"
      message: ReplicaSet "kubernetesapisample-599868f7bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-01T06:24:35Z"
    generation: 1
    labels:
      com.docker.default-service-type: ""
      com.docker.deploy-namespace: docker
      com.docker.fry: compose
      com.docker.image-tag: v0.4.25-alpha1
    name: compose
    namespace: docker
    resourceVersion: "623"
    selfLink: /apis/apps/v1/namespaces/docker/deployments/compose
    uid: 319ae9db-37f1-4e82-99b8-95331609d8a5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        com.docker.default-service-type: ""
        com.docker.deploy-namespace: docker
        com.docker.fry: compose
        com.docker.image-tag: v0.4.25-alpha1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          com.docker.default-service-type: ""
          com.docker.deploy-namespace: docker
          com.docker.fry: compose
          com.docker.image-tag: v0.4.25-alpha1
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - args:
          - --kubeconfig
          - ""
          - --reconciliation-interval
          - 12h0m0s
          - --healthz-check-port
          - "0"
          image: docker/kube-compose-controller:v0.4.25-alpha1
          imagePullPolicy: IfNotPresent
          name: compose
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: compose
        serviceAccountName: compose
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-01T06:25:02Z"
      lastUpdateTime: "2020-06-01T06:25:02Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-06-01T06:24:35Z"
      lastUpdateTime: "2020-06-01T06:25:02Z"
      message: ReplicaSet "compose-78f95d4f8c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-01T06:24:35Z"
    generation: 1
    labels:
      com.docker.deploy-namespace: docker
      com.docker.fry: compose.api
      com.docker.image-tag: v0.4.25-alpha1
    name: compose-api
    namespace: docker
    resourceVersion: "368328"
    selfLink: /apis/apps/v1/namespaces/docker/deployments/compose-api
    uid: 170ffc97-fe75-4db3-8bc8-f8f32973717e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        com.docker.deploy-namespace: docker
        com.docker.fry: compose.api
        com.docker.image-tag: v0.4.25-alpha1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          com.docker.deploy-namespace: docker
          com.docker.fry: compose.api
          com.docker.image-tag: v0.4.25-alpha1
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - args:
          - --kubeconfig
          - ""
          - --authentication-kubeconfig=
          - --authorization-kubeconfig=
          - --service-name=compose-api
          - --service-namespace
          - docker
          - --healthz-check-port
          - "0"
          - --etcd-servers=https://127.0.0.1:2379
          - --etcd-cafile=/etc/docker-compose/etcd/ca.crt
          - --etcd-certfile=/etc/docker-compose/etcd/client.crt
          - --etcd-keyfile=/etc/docker-compose/etcd/client.key
          - --secure-port=9443
          image: docker/kube-compose-api-server:v0.4.25-alpha1
          imagePullPolicy: IfNotPresent
          name: compose
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/docker-compose/etcd
            name: etcd-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: compose
        serviceAccountName: compose
        terminationGracePeriodSeconds: 30
        volumes:
        - name: etcd-secret
          secret:
            defaultMode: 420
            items:
            - key: ca
              path: ca.crt
            - key: cert
              path: client.crt
            - key: key
              path: client.key
            secretName: compose-etcd
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-01T06:24:35Z"
      lastUpdateTime: "2020-06-01T06:24:56Z"
      message: ReplicaSet "compose-api-6ffb89dc58" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-09T03:16:35Z"
      lastUpdateTime: "2020-06-09T03:16:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-01T06:23:18Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "1236627"
    selfLink: /apis/apps/v1/namespaces/kube-system/deployments/coredns
    uid: bb5d273f-b3c5-4a94-a7d0-47eb748c6330
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: k8s.gcr.io/coredns:1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2020-06-01T06:23:24Z"
      lastUpdateTime: "2020-06-01T06:23:37Z"
      message: ReplicaSet "coredns-5644d7b6d9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-07-01T09:28:01Z"
      lastUpdateTime: "2020-07-01T09:28:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
kind: DeploymentList
metadata:
  resourceVersion: "1265468"
  selfLink: /apis/apps/v1/deployments
